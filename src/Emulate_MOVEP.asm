OPCODE_MASK	EQU	$F1B8

MOVEPDXAX	EQU	$188
MOVEPAXDX	EQU	$108

	MC68020
	
PATCH_060INTEGER:
	PEA	EMULATE_MOVEP(PC)

	MOVE.L	(A7),$F4(A0)	; VBR problem. Removed by Jeff
	MOVE.L	(A7)+,$F4.W
	RTS
	

EMULATE_MOVEPW_DXAX
	STORE_REGS	D0/A0
	
	MOVE.L	VALUE(PC),D0
	MOVE.L	MEMORY(PC),A0

	MOVE.B	D0,2(A0)
	LSR.W	#8,D0
	MOVE.B	D0,(A0)
	
	RESTORE_REGS	D0/A0
	RTS

EMULATE_MOVEPL_DXAX
	STORE_REGS	D0/A0

	MOVE.L	VALUE(PC),D0
	MOVE.L	MEMORY(PC),A0

	MOVE.B	D0,6(A0)
	LSR.W	#8,D0
	MOVE.B	D0,4(A0)
	LSR.W	#8,D0
	MOVE.B	D0,2(A0)
	LSR.W	#8,D0
	MOVE.B	D0,(A0)

	RESTORE_REGS	D0/A0
	RTS

EMULATE_MOVEPW_AXD0
	STORE_REGS	A0
	
	MOVE.L	MEMORY(PC),A0

	MOVE.B	(A0),D0
	LSL.W	#8,D0
	MOVE.B	2(A0),D0

	RESTORE_REGS	A0

	RTS

EMULATE_MOVEPL_AXD0
	STORE_REGS	A0

	MOVE.L	MEMORY(PC),A0

	MOVE.B	(A0),D0
	LSL.L	#8,D0
	MOVE.B	2(A0),D0
	LSL.L	#8,D0
	MOVE.B	4(A0),D0
	LSL.L	#8,D0
	MOVE.B	6(A0),D0

	RESTORE_REGS	A0
	RTS

EMULATE_MOVEP
	STORE_REGS	D0/A0
	
	STORE_REGS	A1
	
	LEA	OLD_A0(PC),A1
	MOVE.L	A0,(A1)
	
	LEA	OLD_D0(PC),A1
	MOVE.L	D0,(A1)
	
	LEA	OPCODE(PC),A1
;;	MOVE.L	([(3*4+2),A7]),(A1)
	MOVE.L	(14,A7),(A1)

	RESTORE_REGS	A1

	MOVE.L	OPCODE(PC),D0

	SWAP	D0
	AND.W	#OPCODE_MASK,D0

	CMP	#MOVEPDXAX,D0
	BEQ.S	.EMULATE_MOVEPDXAX

	CMP	#MOVEPAXDX,D0
	BEQ.S	.EMULATE_MOVEPAXDX

	; added by Jeff

	bra	RunTime_illegal060


.EXIT
	RESTORE_REGS	D0/A0

	MOVE.L	OLD_D0(PC),D0		; If requested MOVEP to D0
	ADDQ.L	#4,2(A7)
	RTE
;	RTS

	
.EMULATE_MOVEPDXAX
	MOVE.L	OPCODE(PC),D0

	BSR	SAVE_REGISTER
	BSR	SAVE_MEMORY
	
	BFEXTU	D0{31-(6+16):1},D0

	JMP	.GO_EMULATE_MOVEP_DXAX(PC,D0.W*2)

.GO_EMULATE_MOVEP_DXAX
	BRA.S	.MOVEP_DXAX_WORD
	BRA.S	.MOVEP_DXAX_LONG

.MOVEP_DXAX_WORD
	BSR	EMULATE_MOVEPW_DXAX
	BRA.S	.EXIT

.MOVEP_DXAX_LONG
	BSR	EMULATE_MOVEPL_DXAX
	BRA.S	.EXIT

.EMULATE_MOVEPAXDX
	MOVE.L	OPCODE(PC),D0

	BSR	SAVE_MEMORY

	BFEXTU	D0{31-(6+16):1},D0

	JMP	.GO_EMULATE_MOVEP_AXD0(PC,D0.W*2)

.GO_EMULATE_MOVEP_AXD0
	BRA.S	.MOVEP_AXD0_WORD
	BRA.S	.MOVEP_AXD0_LONG

.MOVEP_AXD0_WORD
	BSR	EMULATE_MOVEPW_AXD0
	BRA.S	.SET_VALUE

.MOVEP_AXD0_LONG
	BSR	EMULATE_MOVEPL_AXD0

.SET_VALUE
	LEA	VALUE(PC),A0
	MOVE.L	D0,(A0)

	MOVE.L	OPCODE(PC),D0

	BFEXTU	D0{31-(6+16):1},D0

	JMP	.MOVE_VALUEDX(PC,D0.W*2)

.MOVE_VALUEDX
	BRA.S	.MOVE_VALUEDX_WORD
	BRA.S	.MOVE_VALUEDX_LONG

.MOVE_VALUEDX_WORD
	MOVE.L	OPCODE(PC),D0

	BSR	MOVE_VALUEDX_WORD
	BRA	.EXIT

.MOVE_VALUEDX_LONG
	MOVE.L	OPCODE(PC),D0

	BSR	MOVE_VALUEDX_LONG
	BRA	.EXIT

SAVE_MEMORY
	STORE_REGS	D0-D1/A0
	
	LEA	MEMORY(PC),A0
	
	MOVE.L	D0,D1

	BFEXTU	D0{31-(0+16+2):3},D0

	AND.L	#$FFFF,D1
	EXT.L	D1

	JSR	SAVE_REGISTERAX(PC,D0.W*2)

	ADD.L	D1,(A0)

	RESTORE_REGS	D0-D1/A0
	RTS

SAVE_REGISTERAX
	BRA.S	.SAVE_A0
	BRA.S	.SAVE_A1
	BRA.S	.SAVE_A2
	BRA.S	.SAVE_A3
	BRA.S	.SAVE_A4
	BRA.S	.SAVE_A5
	BRA.S	.SAVE_A6
	BRA.S	.SAVE_A7

.SAVE_A0
	MOVE.L	OLD_A0(PC),(A0)
	RTS

.SAVE_A1
	MOVE.L	A1,(A0)
	RTS

.SAVE_A2
	MOVE.L	A2,(A0)
	RTS

.SAVE_A3
	MOVE.L	A3,(A0)
	RTS

.SAVE_A4
	MOVE.L	A4,(A0)
	RTS

.SAVE_A5
	MOVE.L	A5,(A0)
	RTS

.SAVE_A6
	MOVE.L	A6,(A0)
	RTS

.SAVE_A7
	MOVE.L	A7,(A0)
	RTS

SAVE_REGISTER
	STORE_REGS	D0/A0

	LEA	VALUE(PC),A0

	BFEXTU	D0{31-(9+16+2):3},D0

	JSR	SAVE_REGISTERDX(PC,D0.W*2)
	
	RESTORE_REGS	D0/A0
	RTS
	
SAVE_REGISTERDX
	BRA.S	.SAVE_D0
	BRA.S	.SAVE_D1
	BRA.S	.SAVE_D2
	BRA.S	.SAVE_D3
	BRA.S	.SAVE_D4
	BRA.S	.SAVE_D5
	BRA.S	.SAVE_D6
	BRA.S	.SAVE_D7

.SAVE_D0
	MOVE.L	OLD_D0(PC),(A0)
	RTS
	
.SAVE_D1
	MOVE.L	D1,(A0)
	RTS

.SAVE_D2
	MOVE.L	D2,(A0)
	RTS

.SAVE_D3
	MOVE.L	D3,(A0)
	RTS

.SAVE_D4
	MOVE.L	D4,(A0)
	RTS

.SAVE_D5
	MOVE.L	D5,(A0)
	RTS

.SAVE_D6
	MOVE.L	D6,(A0)
	RTS

.SAVE_D7
	MOVE.L	D7,(A0)
	RTS

MOVE_VALUEDX_WORD
	STORE_REGS	D0

	BFEXTU	D0{31-(9+16+2):3},D0

	JSR	SET_DX_WORD(PC,D0.W*2)
	
	RESTORE_REGS	D0
	RTS
	
SET_DX_WORD
	BRA.S	.SET_D0_WORD
	BRA.S	.SET_D1_WORD
	BRA.S	.SET_D2_WORD
	BRA.S	.SET_D3_WORD
	BRA.S	.SET_D4_WORD
	BRA.S	.SET_D5_WORD
	BRA.S	.SET_D6_WORD
	BRA.S	.SET_D7_WORD

.SET_D0_WORD
	STORE_REGS	A0/D1
	
	LEA	OLD_D0(PC),A0

	MOVE.L	VALUE(PC),D1
	MOVE	D1,D0
	MOVE.L	D0,(A0)
	
	RESTORE_REGS	A0/D1
	RTS
	
.SET_D1_WORD
	MOVE.W	VALUE+2(PC),D1
	RTS

.SET_D2_WORD
	MOVE.W	VALUE+2(PC),D2
	RTS

.SET_D3_WORD
	MOVE.W	VALUE+2(PC),D3
	RTS

.SET_D4_WORD
	MOVE.W	VALUE+2(PC),D4
	RTS

.SET_D5_WORD
	MOVE.W	VALUE+2(PC),D5
	RTS

.SET_D6_WORD
	MOVE.W	VALUE+2(PC),D6
	RTS

.SET_D7_WORD
	MOVE.W	VALUE+2(PC),D7
	RTS

MOVE_VALUEDX_LONG
	STORE_REGS	D0

	BFEXTU	D0{31-(9+16+2):3},D0

	JSR	SET_DX_LONG(PC,D0.W*2)
	
	RESTORE_REGS	D0
	RTS
	
SET_DX_LONG
	BRA.S	.SET_D0_LONG
	BRA.S	.SET_D1_LONG
	BRA.S	.SET_D2_LONG
	BRA.S	.SET_D3_LONG
	BRA.S	.SET_D4_LONG
	BRA.S	.SET_D5_LONG
	BRA.S	.SET_D6_LONG
	BRA.S	.SET_D7_LONG

.SET_D0_LONG
	STORE_REGS	A0/D1
	
	LEA	OLD_D0(PC),A0
	MOVE.L	VALUE(PC),(A0)
	
	RESTORE_REGS	A0/D1
	RTS
	
.SET_D1_LONG
	MOVE.L	VALUE(PC),D1
	RTS

.SET_D2_LONG
	MOVE.L	VALUE(PC),D2
	RTS

.SET_D3_LONG
	MOVE.L	VALUE(PC),D3
	RTS

.SET_D4_LONG
	MOVE.L	VALUE(PC),D4
	RTS

.SET_D5_LONG
	MOVE.L	VALUE(PC),D5
	RTS

.SET_D6_LONG
	MOVE.L	VALUE(PC),D6
	RTS

.SET_D7_LONG
	MOVE.L	VALUE(PC),D7
	RTS

VALUE
	DC.L	0

MEMORY
	DC.L	0
	
OLD_A0
	DC.L	0
	
OLD_D0
	DC.L	0

OPCODE
	DC.L	0

	RUNTIME_ERROR_ROUTINE	illegal060,"68060: unsupported integer instruction found"

	MC68000

